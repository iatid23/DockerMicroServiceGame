{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ItamarAtid\\\\Desktop\\\\Demos\\\\mprest\\\\candidate\\\\devops_assignment\\\\ui\\\\src\\\\MainScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport jwt_decode from \"jwt-decode\";\nimport GameScreen from \"./GameScreen\";\n\nfunction MainScreen(props) {\n  _s();\n\n  const decoded = jwt_decode(props.jwt);\n  const email = decoded.email;\n  const [showGame, setShowGame] = useState(false);\n  const [isHavePrevGame, setIsHavePrevGame] = useState(false);\n  useEffect(() => {\n    fetch('http://127.0.0.1:8001/is_have_active_game/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        jwt: props.jwt\n      })\n    }).then(res => res.json()).then(res => {\n      setIsHavePrevGame(res.having_game);\n    });\n  }, [showGame]);\n\n  if (showGame) {\n    return /*#__PURE__*/_jsxDEV(GameScreen, {\n      jwt: props.jwt,\n      onBackToMainScreen: () => {\n        setShowGame(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: 16\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" Main screen \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" login as \", email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {// margin:32\n      },\n      onClick: () => {\n        fetch('http://127.0.0.1:8001/start_new_game/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            jwt: props.jwt\n          })\n        }).then(res => res.json()).then(res => {\n          setShowGame(true);\n        });\n      },\n      children: \" Start New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), isHavePrevGame && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setShowGame(true);\n      },\n      children: \" Back To Active Game \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {// margin:32\n      },\n      onClick: () => {\n        props.onLogout();\n      },\n      children: \" LogOut\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this);\n}\n\n_s(MainScreen, \"Hi85DPryFM5zLJA4apMcXG/v6mU=\");\n\n_c = MainScreen;\nexport default MainScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainScreen\");","map":{"version":3,"sources":["C:/Users/ItamarAtid/Desktop/Demos/mprest/candidate/devops_assignment/ui/src/MainScreen.js"],"names":["React","useState","useEffect","jwt_decode","GameScreen","MainScreen","props","decoded","jwt","email","showGame","setShowGame","isHavePrevGame","setIsHavePrevGame","fetch","method","headers","body","JSON","stringify","then","res","json","having_game","margin","onLogout"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport jwt_decode from \"jwt-decode\";\nimport GameScreen from \"./GameScreen\"\n\nfunction MainScreen(props) {\n    const decoded = jwt_decode(props.jwt);\n    const email = decoded.email\n    const [showGame, setShowGame] = useState(false);\n    const [isHavePrevGame, setIsHavePrevGame] = useState(false);\n    useEffect(() => {\n        fetch('http://127.0.0.1:8001/is_have_active_game/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({jwt: props.jwt})\n        }).then(res=>res.json())\n        .then(res => {\n            setIsHavePrevGame(res.having_game)\n        });\n    },[showGame])\n    if(showGame) {\n        return <GameScreen jwt={props.jwt} onBackToMainScreen={() => {\n          setShowGame(false)  \n        }}/>\n    }\n    return (\n      <div style={{\n        margin:16\n    }}>\n        <h3> Main screen </h3>\n        <p> login as {email}</p>\n        <br/>\n        <br/>\n        <button style={{\n            // margin:32\n        }} onClick={() => {\n            fetch('http://127.0.0.1:8001/start_new_game/', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({jwt: props.jwt})\n            }).then(res=>res.json())\n            .then(res => {\n                setShowGame(true)\n            });\n        }}> Start New Game</button>\n        <br/>\n        <br/>\n        {isHavePrevGame && <button onClick={() => {\n            setShowGame(true)\n        }}> Back To Active Game </button>}\n        <br/>\n        <br/>\n        <button style={{\n            // margin:32\n        }} onClick={() => {\n            props.onLogout()\n        }}> LogOut</button>\n      </div>\n    );\n  }\n  \n  export default MainScreen;\n  "]},"metadata":{},"sourceType":"module"}